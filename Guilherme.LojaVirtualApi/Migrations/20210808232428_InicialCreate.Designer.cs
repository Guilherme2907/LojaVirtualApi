// <auto-generated />
using System;
using Guilherme.LojaVirtualApi.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Guilherme.LojaVirtualApi.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20210808232428_InicialCreate")]
    partial class InicialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Complement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Block = "Jardim",
                            CityId = 1L,
                            Complement = "Apto 203",
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 349, DateTimeKind.Local).AddTicks(9485),
                            CustomerId = 1L,
                            Number = "300",
                            Street = "Rua das Flores",
                            ZipCode = "382220834"
                        },
                        new
                        {
                            Id = 2L,
                            Block = "Centro",
                            CityId = 2L,
                            Complement = "Sala 800",
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 349, DateTimeKind.Local).AddTicks(9576),
                            CustomerId = 1L,
                            Number = "105",
                            Street = "Avenida Matos",
                            ZipCode = "38777012"
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 348, DateTimeKind.Local).AddTicks(628),
                            Name = "Informatica"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 348, DateTimeKind.Local).AddTicks(663),
                            Name = "Escritorio"
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.CategoryProduct", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryProducts");

                    b.HasData(
                        new
                        {
                            ProductId = 1L,
                            CategoryId = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 350, DateTimeKind.Local).AddTicks(1059),
                            Id = 1L
                        },
                        new
                        {
                            ProductId = 2L,
                            CategoryId = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 350, DateTimeKind.Local).AddTicks(1099),
                            Id = 2L
                        },
                        new
                        {
                            ProductId = 2L,
                            CategoryId = 2L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 350, DateTimeKind.Local).AddTicks(1103),
                            Id = 3L
                        },
                        new
                        {
                            ProductId = 3L,
                            CategoryId = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 350, DateTimeKind.Local).AddTicks(1106),
                            Id = 4L
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 349, DateTimeKind.Local).AddTicks(5392),
                            Name = "Uberlândia",
                            StateId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 349, DateTimeKind.Local).AddTicks(5450),
                            Name = "São Paulo",
                            StateId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 349, DateTimeKind.Local).AddTicks(5454),
                            Name = "Campinas",
                            StateId = 2L
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Cpf = "36378912377",
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 348, DateTimeKind.Local).AddTicks(3510),
                            CustomerType = 0,
                            Email = "maria@gmail.com",
                            Name = "Maria Silva"
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("DeliveryAddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryAddressId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 348, DateTimeKind.Local).AddTicks(5985),
                            CustomerId = 1L,
                            Date = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryAddressId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 348, DateTimeKind.Local).AddTicks(6052),
                            CustomerId = 1L,
                            Date = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryAddressId = 2L
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.OrderProduct", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            ProductId = 1L,
                            OrderId = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 350, DateTimeKind.Local).AddTicks(4087),
                            Discount = 0.0,
                            Id = 1L,
                            Price = 2000.0,
                            Quantity = 1
                        },
                        new
                        {
                            ProductId = 3L,
                            OrderId = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 350, DateTimeKind.Local).AddTicks(4177),
                            Discount = 0.0,
                            Id = 2L,
                            Price = 80.0,
                            Quantity = 2
                        },
                        new
                        {
                            ProductId = 2L,
                            OrderId = 2L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 350, DateTimeKind.Local).AddTicks(4182),
                            Discount = 0.0,
                            Id = 3L,
                            Price = 800.0,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Payment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Payments");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Payment");
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 346, DateTimeKind.Local).AddTicks(5852),
                            Name = "Computador",
                            Price = 2000.0
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 347, DateTimeKind.Local).AddTicks(9406),
                            Name = "Impressora",
                            Price = 800.0
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 347, DateTimeKind.Local).AddTicks(9439),
                            Name = "Mouse",
                            Price = 80.0
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.State", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 349, DateTimeKind.Local).AddTicks(3477),
                            Name = "Minas Gerais"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 349, DateTimeKind.Local).AddTicks(3510),
                            Name = "São Paulo"
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Telephone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Telephones");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 349, DateTimeKind.Local).AddTicks(2363),
                            CustomerId = 1L,
                            Number = "27363323"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 349, DateTimeKind.Local).AddTicks(2405),
                            CustomerId = 1L,
                            Number = "27363323"
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.PaymentWithBillet", b =>
                {
                    b.HasBaseType("Guilherme.LojaVirtualApi.Models.Entities.Payment");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PayDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("PaymentWithBillet");

                    b.HasData(
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 349, DateTimeKind.Local).AddTicks(826),
                            OrderId = 2L,
                            PaymentStatus = 0,
                            DueDate = new DateTime(2021, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.PaymentWithCard", b =>
                {
                    b.HasBaseType("Guilherme.LojaVirtualApi.Models.Entities.Payment");

                    b.Property<int>("Installments")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("PaymentWithCard");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 8, 8, 20, 24, 27, 348, DateTimeKind.Local).AddTicks(8942),
                            OrderId = 1L,
                            PaymentStatus = 1,
                            Installments = 6
                        });
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Address", b =>
                {
                    b.HasOne("Guilherme.LojaVirtualApi.Models.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Guilherme.LojaVirtualApi.Models.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.CategoryProduct", b =>
                {
                    b.HasOne("Guilherme.LojaVirtualApi.Models.Entities.Category", "Category")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Guilherme.LojaVirtualApi.Models.Entities.Product", "Product")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.City", b =>
                {
                    b.HasOne("Guilherme.LojaVirtualApi.Models.Entities.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Order", b =>
                {
                    b.HasOne("Guilherme.LojaVirtualApi.Models.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Guilherme.LojaVirtualApi.Models.Entities.Address", "DeliveryAddress")
                        .WithMany()
                        .HasForeignKey("DeliveryAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("DeliveryAddress");
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.OrderProduct", b =>
                {
                    b.HasOne("Guilherme.LojaVirtualApi.Models.Entities.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Guilherme.LojaVirtualApi.Models.Entities.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Payment", b =>
                {
                    b.HasOne("Guilherme.LojaVirtualApi.Models.Entities.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("Guilherme.LojaVirtualApi.Models.Entities.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Telephone", b =>
                {
                    b.HasOne("Guilherme.LojaVirtualApi.Models.Entities.Customer", null)
                        .WithMany("Telephones")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Category", b =>
                {
                    b.Navigation("CategoryProducts");
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("Telephones");
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderProducts");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.Product", b =>
                {
                    b.Navigation("CategoryProducts");

                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Guilherme.LojaVirtualApi.Models.Entities.State", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
